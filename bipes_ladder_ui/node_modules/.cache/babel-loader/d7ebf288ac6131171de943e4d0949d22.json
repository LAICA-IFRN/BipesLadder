{"ast":null,"code":"import _objectSpread from \"/home/andouglas/Documents/BipesLadder/BipesLadderReact/react-dnd-example/react-dnd-example/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nimport _slicedToArray from \"/home/andouglas/Documents/BipesLadder/BipesLadderReact/react-dnd-example/react-dnd-example/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\n\nvar _this = this,\n    _jsxFileName = \"/home/andouglas/Documents/BipesLadder/BipesLadderReact/react-dnd-example/react-dnd-example/src/Column.jsx\";\n\nimport React, { useRef } from \"react\";\nimport { useDrag } from \"react-dnd\";\nimport { COLUMN } from \"./constants\";\nimport DropZone from \"./DropZone\";\nimport Component from \"./Component\";\nvar style = {};\n\nvar Column = function Column(_ref) {\n  var data = _ref.data,\n      components = _ref.components,\n      handleDrop = _ref.handleDrop,\n      path = _ref.path;\n  var ref = useRef(null);\n\n  var _useDrag = useDrag({\n    item: {\n      type: COLUMN,\n      id: data.id,\n      children: data.children,\n      path: path\n    },\n    collect: function collect(monitor) {\n      return {\n        isDragging: monitor.isDragging()\n      };\n    }\n  }),\n      _useDrag2 = _slicedToArray(_useDrag, 2),\n      isDragging = _useDrag2[0].isDragging,\n      drag = _useDrag2[1];\n\n  var opacity = isDragging ? 0 : 1;\n  drag(ref);\n\n  var renderComponent = function renderComponent(component, currentPath) {\n    return /*#__PURE__*/React.createElement(Component, {\n      key: component.id,\n      data: component,\n      components: components,\n      path: currentPath,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 7\n      }\n    });\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    ref: ref,\n    style: _objectSpread({}, style, {\n      opacity: opacity\n    }),\n    className: \"base draggable column\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 5\n    }\n  }, data.children.map(function (component, index) {\n    var currentPath = \"\".concat(path, \"-\").concat(index);\n    return /*#__PURE__*/React.createElement(React.Fragment, {\n      key: component.id,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(DropZone, {\n      data: {\n        path: currentPath,\n        childrenCount: data.children.length,\n        drawLine: false\n      },\n      onDrop: handleDrop,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 13\n      }\n    }), renderComponent(component, currentPath));\n  }), /*#__PURE__*/React.createElement(DropZone, {\n    data: {\n      path: \"\".concat(path, \"-\").concat(data.children.length),\n      childrenCount: data.children.length,\n      drawLine: false\n    },\n    onDrop: handleDrop,\n    isLast: true,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 7\n    }\n  }));\n};\n\nexport default Column;","map":{"version":3,"sources":["/home/andouglas/Documents/BipesLadder/BipesLadderReact/react-dnd-example/react-dnd-example/src/Column.jsx"],"names":["React","useRef","useDrag","COLUMN","DropZone","Component","style","Column","data","components","handleDrop","path","ref","item","type","id","children","collect","monitor","isDragging","drag","opacity","renderComponent","component","currentPath","map","index","childrenCount","length","drawLine"],"mappings":"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","sourcesContent":["import React, { useRef } from \"react\";\nimport { useDrag } from \"react-dnd\";\nimport { COLUMN } from \"./constants\";\nimport DropZone from \"./DropZone\";\nimport Component from \"./Component\";\n\nconst style = {};\nconst Column = ({ data, components, handleDrop, path }) => {\n  const ref = useRef(null);\n\n  const [{ isDragging }, drag] = useDrag({\n    item: {\n      type: COLUMN,\n      id: data.id,\n      children: data.children,\n      path\n    },\n    collect: (monitor) => ({\n      isDragging: monitor.isDragging()\n    })\n  });\n\n  const opacity = isDragging ? 0 : 1;\n  drag(ref);\n\n  const renderComponent = (component, currentPath) => {\n    return (\n      <Component\n        key={component.id}\n        data={component}\n        components={components}\n        path={currentPath}\n      />\n    );\n  };\n\n  return (\n    <div\n      ref={ref}\n      style={{ ...style, opacity }}\n      className=\"base draggable column\"\n    >\n      \n      {data.children.map((component, index) => {\n        const currentPath = `${path}-${index}`;\n\n        return (\n          <React.Fragment key={component.id}>\n            <DropZone\n              data={{\n                path: currentPath,\n                childrenCount: data.children.length,\n                drawLine: false\n              }}\n              onDrop={handleDrop}\n            />\n            {renderComponent(component, currentPath)}\n          </React.Fragment>\n        );\n      })}\n      <DropZone\n        data={{\n          path: `${path}-${data.children.length}`,\n          childrenCount: data.children.length,\n          drawLine: false\n        }}\n        onDrop={handleDrop}\n        isLast\n      />\n    </div>\n  );\n};\nexport default Column;\n"]},"metadata":{},"sourceType":"module"}