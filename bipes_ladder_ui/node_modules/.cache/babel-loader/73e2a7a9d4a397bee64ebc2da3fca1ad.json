{"ast":null,"code":"import _objectSpread from \"/home/andouglas/Documents/BipesLadder/BipesLadderReact/react-dnd-example/react-dnd-example/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nimport _slicedToArray from \"/home/andouglas/Documents/BipesLadder/BipesLadderReact/react-dnd-example/react-dnd-example/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\n\nvar _this = this,\n    _jsxFileName = \"/home/andouglas/Documents/BipesLadder/BipesLadderReact/react-dnd-example/react-dnd-example/src/Row.jsx\";\n\nimport React, { useRef } from \"react\";\nimport { useDrag } from \"react-dnd\";\nimport { ROW } from \"./constants\";\nimport DropZone from \"./DropZone\";\nimport Column from \"./Column\";\nimport OutputDropZone from \"./OutputDropZone\";\nvar style = {\n  border: \"1px dashed black\"\n};\nvar columns_per_row = 5;\n\nvar Row = function Row(_ref) {\n  var data = _ref.data,\n      components = _ref.components,\n      handleDrop = _ref.handleDrop,\n      path = _ref.path;\n  var ref = useRef(null);\n\n  var _useDrag = useDrag({\n    item: {\n      type: ROW,\n      id: data.id,\n      children: data.children,\n      path: path\n    },\n    collect: function collect(monitor) {\n      return {\n        isDragging: monitor.isDragging()\n      };\n    }\n  }),\n      _useDrag2 = _slicedToArray(_useDrag, 2),\n      isDragging = _useDrag2[0].isDragging,\n      drag = _useDrag2[1];\n\n  var opacity = isDragging ? 0 : 1;\n  drag(ref);\n\n  var renderColumn = function renderColumn(column, currentPath) {\n    return /*#__PURE__*/React.createElement(Column, {\n      key: column.id,\n      data: column,\n      components: components,\n      handleDrop: handleDrop,\n      path: currentPath,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 7\n      }\n    });\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    ref: ref,\n    style: _objectSpread({}, style, {\n      opacity: opacity\n    }),\n    className: \"base draggable row\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"columns\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }\n  }, data.children.map(function (column, index) {\n    var currentPath = \"\".concat(path, \"-\").concat(index);\n    return /*#__PURE__*/React.createElement(React.Fragment, {\n      key: column.id,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(DropZone, {\n      data: {\n        path: currentPath,\n        childrenCount: columns_per_row,\n        drawLine: true\n      },\n      onDrop: handleDrop,\n      className: \"horizontalDrag\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 15\n      }\n    }), renderColumn(column, currentPath));\n  }), /*#__PURE__*/React.createElement(DropZone, {\n    data: {\n      path: \"\".concat(path),\n      childrenCount: 5\n    },\n    onDrop: handleDrop,\n    isLast: true,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 11\n    }\n  })));\n};\n\nexport default Row;","map":{"version":3,"sources":["/home/andouglas/Documents/BipesLadder/BipesLadderReact/react-dnd-example/react-dnd-example/src/Row.jsx"],"names":["React","useRef","useDrag","ROW","DropZone","Column","OutputDropZone","style","border","columns_per_row","Row","data","components","handleDrop","path","ref","item","type","id","children","collect","monitor","isDragging","drag","opacity","renderColumn","column","currentPath","map","index","childrenCount","drawLine"],"mappings":";;;;;;AAAA,OAAOA,KAAP,IAAgBC,MAAhB,QAA8B,OAA9B;AACA,SAASC,OAAT,QAAwB,WAAxB;AACA,SAASC,GAAT,QAAoB,aAApB;AACA,OAAOC,QAAP,MAAqB,YAArB;AACA,OAAOC,MAAP,MAAmB,UAAnB;AACA,OAAOC,cAAP,MAA2B,kBAA3B;AAEA,IAAMC,KAAK,GAAG;AAACC,EAAAA,MAAM,EAAE;AAAT,CAAd;AACA,IAAMC,eAAe,GAAG,CAAxB;;AACA,IAAMC,GAAG,GAAG,SAANA,GAAM,OAA4C;AAAA,MAAzCC,IAAyC,QAAzCA,IAAyC;AAAA,MAAnCC,UAAmC,QAAnCA,UAAmC;AAAA,MAAvBC,UAAuB,QAAvBA,UAAuB;AAAA,MAAXC,IAAW,QAAXA,IAAW;AACtD,MAAMC,GAAG,GAAGd,MAAM,CAAC,IAAD,CAAlB;;AADsD,iBAGvBC,OAAO,CAAC;AACrCc,IAAAA,IAAI,EAAE;AACJC,MAAAA,IAAI,EAAEd,GADF;AAEJe,MAAAA,EAAE,EAAEP,IAAI,CAACO,EAFL;AAGJC,MAAAA,QAAQ,EAAER,IAAI,CAACQ,QAHX;AAIJL,MAAAA,IAAI,EAAJA;AAJI,KAD+B;AAOrCM,IAAAA,OAAO,EAAE,iBAAAC,OAAO;AAAA,aAAK;AACnBC,QAAAA,UAAU,EAAED,OAAO,CAACC,UAAR;AADO,OAAL;AAAA;AAPqB,GAAD,CAHgB;AAAA;AAAA,MAG7CA,UAH6C,gBAG7CA,UAH6C;AAAA,MAG/BC,IAH+B;;AAetD,MAAMC,OAAO,GAAGF,UAAU,GAAG,CAAH,GAAO,CAAjC;AACAC,EAAAA,IAAI,CAACR,GAAD,CAAJ;;AAEA,MAAMU,YAAY,GAAG,SAAfA,YAAe,CAACC,MAAD,EAASC,WAAT,EAAyB;AAC5C,wBACE,oBAAC,MAAD;AACE,MAAA,GAAG,EAAED,MAAM,CAACR,EADd;AAEE,MAAA,IAAI,EAAEQ,MAFR;AAGE,MAAA,UAAU,EAAEd,UAHd;AAIE,MAAA,UAAU,EAAEC,UAJd;AAKE,MAAA,IAAI,EAAEc,WALR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF;AASD,GAVD;;AAYA,sBACE;AAAK,IAAA,GAAG,EAAEZ,GAAV;AAAe,IAAA,KAAK,oBAAOR,KAAP;AAAciB,MAAAA,OAAO,EAAPA;AAAd,MAApB;AAA6C,IAAA,SAAS,EAAC,oBAAvD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAEE;AAAK,IAAA,SAAS,EAAC,SAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGb,IAAI,CAACQ,QAAL,CAAcS,GAAd,CAAkB,UAACF,MAAD,EAASG,KAAT,EAAmB;AACpC,QAAMF,WAAW,aAAMb,IAAN,cAAce,KAAd,CAAjB;AAEA,wBACE,oBAAC,KAAD,CAAO,QAAP;AAAgB,MAAA,GAAG,EAAEH,MAAM,CAACR,EAA5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE,oBAAC,QAAD;AACE,MAAA,IAAI,EAAE;AACJJ,QAAAA,IAAI,EAAEa,WADF;AAEJG,QAAAA,aAAa,EAAErB,eAFX;AAGJsB,QAAAA,QAAQ,EAAE;AAHN,OADR;AAME,MAAA,MAAM,EAAElB,UANV;AAOE,MAAA,SAAS,EAAC,gBAPZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,EAUGY,YAAY,CAACC,MAAD,EAASC,WAAT,CAVf,CADF;AAcD,GAjBA,CADH,eAmBI,oBAAC,QAAD;AACE,IAAA,IAAI,EAAI;AACNb,MAAAA,IAAI,YAAKA,IAAL,CADE;AAENgB,MAAAA,aAAa,EAAE;AAFT,KADV;AAKE,IAAA,MAAM,EAAEjB,UALV;AAOE,IAAA,MAAM,MAPR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAnBJ,CAFF,CADF;AAkCD,CAhED;;AAiEA,eAAeH,GAAf","sourcesContent":["import React, { useRef } from \"react\";\nimport { useDrag } from \"react-dnd\";\nimport { ROW } from \"./constants\";\nimport DropZone from \"./DropZone\";\nimport Column from \"./Column\";\nimport OutputDropZone from \"./OutputDropZone\"\n\nconst style = {border: \"1px dashed black\"};\nconst columns_per_row = 5;\nconst Row = ({ data, components, handleDrop, path }) => {\n  const ref = useRef(null);\n\n  const [{ isDragging }, drag] = useDrag({\n    item: {\n      type: ROW,\n      id: data.id,\n      children: data.children,\n      path\n    },\n    collect: monitor => ({\n      isDragging: monitor.isDragging()\n    })\n  });\n\n  const opacity = isDragging ? 0 : 1;\n  drag(ref);\n\n  const renderColumn = (column, currentPath) => {\n    return (\n      <Column\n        key={column.id}\n        data={column}\n        components={components}\n        handleDrop={handleDrop}\n        path={currentPath}\n      />\n    );\n  };\n\n  return (\n    <div ref={ref} style={{ ...style, opacity }} className=\"base draggable row\">\n      \n      <div className=\"columns\">\n        {data.children.map((column, index) => {\n          const currentPath = `${path}-${index}`;\n\n          return (\n            <React.Fragment key={column.id}>\n              <DropZone\n                data={{\n                  path: currentPath,\n                  childrenCount: columns_per_row,\n                  drawLine: true\n                }}\n                onDrop={handleDrop}\n                className=\"horizontalDrag\"\n              />\n              {renderColumn(column, currentPath)}\n            </React.Fragment>\n          );\n        })}\n          <DropZone \n            data = {{\n              path: `${path}`,\n              childrenCount: 5\n            }}\n            onDrop={handleDrop}\n\n            isLast\n          />\n      </div>\n    </div>\n  );\n};\nexport default Row;\n"]},"metadata":{},"sourceType":"module"}