{"ast":null,"code":"import _slicedToArray from \"/home/andouglas/Documents/BipesLadder/BipesLadderReact/react-dnd-example/react-dnd-example/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\n\nvar _this = this,\n    _jsxFileName = \"/home/andouglas/Documents/BipesLadder/BipesLadderReact/react-dnd-example/react-dnd-example/src/TrashDropZone.jsx\";\n\nimport React from \"react\";\nimport classNames from \"classnames\";\nimport { useDrop } from \"react-dnd\";\nimport { COMPONENT, ROW, COLUMN } from \"./constants\";\nvar ACCEPTS = [ROW, COLUMN, COMPONENT];\n\nvar TrashDropZone = function TrashDropZone(_ref) {\n  var data = _ref.data,\n      onDrop = _ref.onDrop;\n\n  var _useDrop = useDrop({\n    accept: ACCEPTS,\n    drop: function drop(item, monitor) {\n      onDrop(data, item);\n    },\n    canDrop: function canDrop(item, monitor) {\n      var layout = data.layout;\n      var itemPath = item.path;\n      var splitItemPath = itemPath.split(\"-\");\n      var itemPathRowIndex = splitItemPath[0];\n      var itemRowChildrenLength = layout[itemPathRowIndex] && layout[itemPathRowIndex].children.length; // prevent removing a col when row has only one col\n\n      // prevent removing a col when row has only one col\n      if (item.type === COLUMN && itemRowChildrenLength && itemRowChildrenLength < 2) {\n        return false;\n      }\n\n      return true;\n    },\n    collect: function collect(monitor) {\n      return {\n        isOver: monitor.isOver(),\n        canDrop: monitor.canDrop()\n      };\n    }\n  }),\n      _useDrop2 = _slicedToArray(_useDrop, 2),\n      _useDrop2$ = _useDrop2[0],\n      isOver = _useDrop2$.isOver,\n      canDrop = _useDrop2$.canDrop,\n      drop = _useDrop2[1];\n\n  var isActive = isOver && canDrop;\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: classNames(\"trashDropZone\", {\n      active: isActive\n    }),\n    ref: drop,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 5\n    }\n  }, \"TRASH\");\n};\n\nexport default TrashDropZone;","map":{"version":3,"sources":["/home/andouglas/Documents/BipesLadder/BipesLadderReact/react-dnd-example/react-dnd-example/src/TrashDropZone.jsx"],"names":["React","classNames","useDrop","COMPONENT","ROW","COLUMN","ACCEPTS","TrashDropZone","data","onDrop","accept","drop","item","monitor","canDrop","layout","itemPath","path","splitItemPath","split","itemPathRowIndex","itemRowChildrenLength","children","length","type","collect","isOver","isActive","active"],"mappings":";;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,UAAP,MAAuB,YAAvB;AACA,SAASC,OAAT,QAAwB,WAAxB;AACA,SAASC,SAAT,EAAoBC,GAApB,EAAyBC,MAAzB,QAAuC,aAAvC;AAEA,IAAMC,OAAO,GAAG,CAACF,GAAD,EAAMC,MAAN,EAAcF,SAAd,CAAhB;;AAEA,IAAMI,aAAa,GAAG,SAAhBA,aAAgB,OAAsB;AAAA,MAAnBC,IAAmB,QAAnBA,IAAmB;AAAA,MAAbC,MAAa,QAAbA,MAAa;;AAAA,iBACNP,OAAO,CAAC;AAC1CQ,IAAAA,MAAM,EAAEJ,OADkC;AAE1CK,IAAAA,IAAI,EAAE,cAACC,IAAD,EAAOC,OAAP,EAAmB;AACvBJ,MAAAA,MAAM,CAACD,IAAD,EAAOI,IAAP,CAAN;AACD,KAJyC;AAK1CE,IAAAA,OAAO,EAAE,iBAACF,IAAD,EAAOC,OAAP,EAAmB;AAC1B,UAAME,MAAM,GAAGP,IAAI,CAACO,MAApB;AACA,UAAMC,QAAQ,GAAGJ,IAAI,CAACK,IAAtB;AACA,UAAMC,aAAa,GAAGF,QAAQ,CAACG,KAAT,CAAe,GAAf,CAAtB;AACA,UAAMC,gBAAgB,GAAGF,aAAa,CAAC,CAAD,CAAtC;AACA,UAAMG,qBAAqB,GACzBN,MAAM,CAACK,gBAAD,CAAN,IAA4BL,MAAM,CAACK,gBAAD,CAAN,CAAyBE,QAAzB,CAAkCC,MADhE,CAL0B,CAQ1B;;AAAA;AACA,UACEX,IAAI,CAACY,IAAL,KAAcnB,MAAd,IACAgB,qBADA,IAEAA,qBAAqB,GAAG,CAH1B,EAIE;AACA,eAAO,KAAP;AACD;;AAED,aAAO,IAAP;AACD,KAvByC;AAwB1CI,IAAAA,OAAO,EAAE,iBAACZ,OAAD;AAAA,aAAc;AACrBa,QAAAA,MAAM,EAAEb,OAAO,CAACa,MAAR,EADa;AAErBZ,QAAAA,OAAO,EAAED,OAAO,CAACC,OAAR;AAFY,OAAd;AAAA;AAxBiC,GAAD,CADD;AAAA;AAAA;AAAA,MACjCY,MADiC,cACjCA,MADiC;AAAA,MACzBZ,OADyB,cACzBA,OADyB;AAAA,MACdH,IADc;;AA+B1C,MAAMgB,QAAQ,GAAGD,MAAM,IAAIZ,OAA3B;AACA,sBACE;AACE,IAAA,SAAS,EAAEb,UAAU,CAAC,eAAD,EAAkB;AAAE2B,MAAAA,MAAM,EAAED;AAAV,KAAlB,CADvB;AAEE,IAAA,GAAG,EAAEhB,IAFP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aADF;AAQD,CAxCD;;AAyCA,eAAeJ,aAAf","sourcesContent":["import React from \"react\";\nimport classNames from \"classnames\";\nimport { useDrop } from \"react-dnd\";\nimport { COMPONENT, ROW, COLUMN } from \"./constants\";\n\nconst ACCEPTS = [ROW, COLUMN, COMPONENT];\n\nconst TrashDropZone = ({ data, onDrop }) => {\n  const [{ isOver, canDrop }, drop] = useDrop({\n    accept: ACCEPTS,\n    drop: (item, monitor) => {\n      onDrop(data, item);\n    },\n    canDrop: (item, monitor) => {\n      const layout = data.layout;\n      const itemPath = item.path;\n      const splitItemPath = itemPath.split(\"-\");\n      const itemPathRowIndex = splitItemPath[0];\n      const itemRowChildrenLength =\n        layout[itemPathRowIndex] && layout[itemPathRowIndex].children.length;\n\n      // prevent removing a col when row has only one col\n      if (\n        item.type === COLUMN &&\n        itemRowChildrenLength &&\n        itemRowChildrenLength < 2\n      ) {\n        return false;\n      }\n\n      return true;\n    },\n    collect: (monitor) => ({\n      isOver: monitor.isOver(),\n      canDrop: monitor.canDrop()\n    })\n  });\n\n  const isActive = isOver && canDrop;\n  return (\n    <div\n      className={classNames(\"trashDropZone\", { active: isActive })}\n      ref={drop}\n    >\n      TRASH\n    </div>\n  );\n};\nexport default TrashDropZone;\n"]},"metadata":{},"sourceType":"module"}